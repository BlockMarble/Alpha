* sublime 이나 npp 로 볼것 

2018-09-17

creator.sol 

	- 상태 : 더미 값을 가져오게끔 설계되어 있음 
	
	- 주소 : 0x7b4e1c497dd68b6fa8bb034f46fc1280e4ce9326

	- ABI : [ { "constant": false, "inputs": [ { "name": "mapid", "type": "uint256" }, { "name": "wait", "type": "uint256" } ], "name": "createGame", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "name": "page", "type": "uint256" } ], "name": "fetchGames", "outputs": [ { "name": "list", "type": "address[10]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "width", "type": "uint256" }, { "name": "height", "type": "uint256" }, { "name": "playermin", "type": "uint256" }, { "name": "playermax", "type": "uint256" }, { "name": "dicemin", "type": "uint256" }, { "name": "dicemax", "type": "uint256" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "name": "createMap", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "name": "id", "type": "uint256" } ], "name": "fetchMap", "outputs": [ { "name": "info", "type": "uint256[6]" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" } ]
		

	- 함수 설명 : 
		

	    function fetchGames(uint page) public returns (address[10] list)
	    	- 클라이언트에서 페이지값 (1,2,3 ...) 을 넘기면 해당 페이지에 있는 10개의 개설된 게임 주소를 가져온다. 
	    
	    function createGame(uint mapid,  uint playermin, uint playermax, uint wait) public returns ()
	    	- 맵 id 와 최소/최대인원, 최소인원 충족 후 대기 시간을 지정해서 넘기면 게임 컨트랙트를 생성한다. 
	        - 주소 반환 기능은 추후 추가함
	        
	    
	    function fetchMap(uint id) public view returns (uint[6] info,uint[] walls,uint[] prices)
	    	- 클라이언트에서 맵의 아이디값 (1,2,3..)을 넘기면 맵의 정보를 가져온다. 
	    	- 구조는 
	    		info = [너비,높이,주사위최소,주사위최대]
	    		walls = [255(0b00..001111111),129(0b00..001000001),129,129,129,255]
	    		prices = [110000,120000, ...]

	    	- 현재는 하나의 256bit uint 에서 작은 비트 부터 왼쪽을 의미함
	    	- 넘치는 비트는 버림 
	    		- 10X10을 표현하기 위해는 총 10개의 uint 가 필요함 
	    		- 257X10을 표현하기 위해서는 총 20개의 uint 가 필요함 
	    	- 포맷 방식 변경 원할 시 요청해주세요
	    		ex) 0b00000...00111 => 왼쪽부터 3개의 비트가 벽이 아님 
	    	- 현재  solidity 는 struct 반환이 안되기 때문에 이게 최선  	

	    function createMap(uint width, uint height,uint dicemin, uint dicemax, uint[] walls, uint[] prices) public returns (){
	        - 너비 높이 주사위 최소 최대 벽위치 각 땅 가격을 넘기면 해당하는 맵을 생성한다. 
	    	- 맵 id 반환 기능은 추후 추가함



2018-09-18 

creator.sol 

	
	- 업데이트 : createGame 함수를 실행시 creation event 를 발생시킴 web3의 필터를 통해 생성된 게임컨트랙트를 받을 수 있음 
	
	- 주소 : 0x7ca7a64b11deb031c410ae85e0c234cb2bcfb388

	- ABI : [ { "constant": false, "inputs": [ { "name": "mapid", "type": "uint256" }, { "name": "wait", "type": "uint256" } ], "name": "createGame", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "width", "type": "uint256" }, { "name": "height", "type": "uint256" }, { "name": "playermin", "type": "uint256" }, { "name": "playermax", "type": "uint256" }, { "name": "dicemin", "type": "uint256" }, { "name": "dicemax", "type": "uint256" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "name": "createMap", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": true, "name": "id", "type": "uint256" }, { "indexed": true, "name": "owner", "type": "address" }, { "indexed": true, "name": "addr", "type": "address" } ], "name": "creation", "type": "event" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": true, "inputs": [], "name": "aaa", "outputs": [ { "name": "a", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "page", "type": "uint256" } ], "name": "fetchGames", "outputs": [ { "name": "list", "type": "address[10]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "id", "type": "uint256" } ], "name": "fetchMap", "outputs": [ { "name": "info", "type": "uint256[6]" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" } ]
		
		
2018-09-19


creator.sol

 	- 업데이트 : 이제 벽의 값을 256 비트 꽉 채워서 전달함 ex) 256개 이하의 벽정보는 하나의 uint로 전달함 

 	- 주소 : 0xa0bb1671d29fee1baeeb2383fd592d1b7ca37cf4

 	- ABI : [ { "constant": false, "inputs": [ { "name": "mapid", "type": "uint256" }, { "name": "wait", "type": "uint256" } ], "name": "createGame", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "width", "type": "uint256" }, { "name": "height", "type": "uint256" }, { "name": "playermin", "type": "uint256" }, { "name": "playermax", "type": "uint256" }, { "name": "dicemin", "type": "uint256" }, { "name": "dicemax", "type": "uint256" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "name": "createMap", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": true, "name": "id", "type": "uint256" }, { "indexed": true, "name": "owner", "type": "address" }, { "indexed": true, "name": "addr", "type": "address" } ], "name": "creation", "type": "event" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": true, "inputs": [], "name": "aaa", "outputs": [ { "name": "a", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "page", "type": "uint256" } ], "name": "fetchGames", "outputs": [ { "name": "list", "type": "address[10]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "id", "type": "uint256" } ], "name": "fetchMap", "outputs": [ { "name": "info", "type": "uint256[6]" }, { "name": "walls", "type": "uint256[]" }, { "name": "prices", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" } ]



 2018-09-20
 
 Game.sol	
    
    - 상태 : 아직 배포 안됨 함수와 이벤트 리스트만 작성함 

	- 함수 
		function start()

			방장이 날리는 명령, 시작이 성공하면 DiceGen 이벤트 발생 

			실패시  StartFail 이벤트 발생 

		function view()
			
			DiceGen 이벤트가 발생하고 나서부터 호출할 수 있다. 

			아래의 세 배열은 플레이어의 들어온 순서를 인덱스로 한다. 0<=x<(총플레이어수)

				플레이어 주소 목록 
					[0x... , 0x.... , ...]

				플레이어 현금 목록 
					[10000, 200000, 30000, ...]

				플레이어 위치 목록 
					[[2,3],[2,5],[11,20],...]


			아래의 두 배열은 땅의 아이디 0<=x<(땅의 갯수) 를 인덱스로 한다. 

				땅의 소유자 목록
					[0x... ,0x ... , 0x....]

				땅의 빌딩수 목록 
					[2,3,0,0,0,0,3,1,3,.....]




		function join()
		 	
		 	msg.sender를 참여 시킴 

		 	최대인원 초과 등의 이유로 실패시 JoinResult(false) event 발생 

		 	성공시 JoinResult(true) event 발생 


		function action(uint8[] actionids, uint[] params) public

			실행할 명령들의 모음을 보내고 성공 실패 이벤트를 발생시킴

				성공시 ActionResult(true); 

			명령 모음 : 

				좌 , 상 , 우 , 하 = 1 , 2 , 3 , 4 

					params : 1~dicemax 사이의 숫자 

					이동 명령의 총합이 항상 받은 dice의 값과 같거나 커야함 더 클시 이동하다 멈춤 

					이동은 항상 온 방향과는 다른 방향이어야함 즉 오른쪽으로 갔다가 왼쪽으로 가기 위쪽으로 갔다가 아래쪽으로 가기 는 안됨  

				5 : 입찰 

					params : 1~보유 현금 사이의 숫자 

				6 : 매각 

					params : 땅의 id (1~총 땅 갯수)

				7 : 짓기 

					params : 갯수(1~5) 
		 	
					- 현재는 한가지 부동산만 지원 

    - 이벤트 :    
	    
	    event DiceGen();
	    	- 주사위가 생성되었음을 의미 	
	    	- 이때 이후로 getDice() 호출 가능

	    event JoinResult(bool indexed tf);
	    	- join() 을 호출하고 성공 실패 여부를 반환 
		     	
	    event ActionResult(bool indexed tf);	

	    event StartFail();